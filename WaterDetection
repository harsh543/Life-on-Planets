#include <opencv2/core/utility.hpp>
#include "opencv2/imgproc.hpp"
#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui.hpp"

#include <cstdio>
#include <iostream>

using namespace cv;
using namespace std;


Mat markerMask, img;
Point prevPt(-1, -1);



int main( int argc, char** argv )
{
     Mat image,frame;
       Mat new_image = Mat::zeros( image.size(), image.type() );

    image = imread(argv[1], CV_LOAD_IMAGE_COLOR);
    
    
   cvtColor(image, hsv, COLOR_BGR2HSV);
for( int y = 0; y < image.rows; y++ ) {
        for( int x = 0; x < image.cols; x++ ) {
            for( int c = 0; c < 3; c++ ) {
                new_image.at<Vec3b>(y,x)[c] =
                  saturate_cast<uchar>( alpha*( image.at<Vec3b>(y,x)[c] ) + beta );
            }
        }
    }
    
  

    return 0;
}
